ELF Header:
  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
  Class:                             ELF64
  Data:                              2's complement, little endian
  Version:                           1 (current)
  OS/ABI:                            UNIX - System V
  ABI Version:                       0
  Type:                              DYN (Shared object file)
  Machine:                           AArch64
  Version:                           0x1
  Entry point address:               0xa30
  Start of program headers:          64 (bytes into file)
  Start of section headers:          17360 (bytes into file)
  Flags:                             0x0
  Size of this header:               64 (bytes)
  Size of program headers:           56 (bytes)
  Number of program headers:         9
  Size of section headers:           64 (bytes)
  Number of section headers:         34
  Section header string table index: 33

Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [ 0]                   NULL             0000000000000000  00000000
       0000000000000000  0000000000000000           0     0     0
  [ 1] .interp           PROGBITS         0000000000000238  00000238
       000000000000001b  0000000000000000   A       0     0     1
  [ 2] .note.gnu.bu[...] NOTE             0000000000000254  00000254
       0000000000000024  0000000000000000   A       0     0     4
  [ 3] .note.ABI-tag     NOTE             0000000000000278  00000278
       0000000000000020  0000000000000000   A       0     0     4
  [ 4] .gnu.hash         GNU_HASH         0000000000000298  00000298
       000000000000001c  0000000000000000   A       5     0     8
  [ 5] .dynsym           DYNSYM           00000000000002b8  000002b8
       0000000000000228  0000000000000018   A       6     3     8
  [ 6] .dynstr           STRTAB           00000000000004e0  000004e0
       0000000000000112  0000000000000000   A       0     0     1
  [ 7] .gnu.version      VERSYM           00000000000005f2  000005f2
       000000000000002e  0000000000000002   A       5     0     2
  [ 8] .gnu.version_r    VERNEED          0000000000000620  00000620
       0000000000000020  0000000000000000   A       6     1     8
  [ 9] .rela.dyn         RELA             0000000000000640  00000640
       0000000000000108  0000000000000018   A       5     0     8
  [10] .rela.plt         RELA             0000000000000748  00000748
       0000000000000198  0000000000000018  AI       5    22     8
  [11] .init             PROGBITS         00000000000008e0  000008e0
       0000000000000014  0000000000000000  AX       0     0     4
  [12] .plt              PROGBITS         0000000000000900  00000900
       0000000000000130  0000000000000000  AX       0     0     16
  [13] .text             PROGBITS         0000000000000a30  00000a30
       00000000000006f4  0000000000000000  AX       0     0     16
  [14] .fini             PROGBITS         0000000000001124  00001124
       0000000000000010  0000000000000000  AX       0     0     4
  [15] .rodata           PROGBITS         0000000000001138  00001138
       0000000000000192  0000000000000000   A       0     0     8
  [16] .eh_frame_hdr     PROGBITS         00000000000012cc  000012cc
       0000000000000064  0000000000000000   A       0     0     4
  [17] .eh_frame         PROGBITS         0000000000001330  00001330
       0000000000000174  0000000000000000   A       0     0     8
  [18] .init_array       INIT_ARRAY       0000000000011da0  00001da0
       0000000000000008  0000000000000008  WA       0     0     8
  [19] .fini_array       FINI_ARRAY       0000000000011da8  00001da8
       0000000000000008  0000000000000008  WA       0     0     8
  [20] .dynamic          DYNAMIC          0000000000011db0  00001db0
       00000000000001f0  0000000000000010  WA       6     0     8
  [21] .got              PROGBITS         0000000000011fa0  00001fa0
       0000000000000048  0000000000000008  WA       0     0     8
  [22] .got.plt          PROGBITS         0000000000011fe8  00001fe8
       00000000000000a0  0000000000000008  WA       0     0     8
  [23] .data             PROGBITS         0000000000012088  00002088
       0000000000000010  0000000000000000  WA       0     0     8
  [24] .bss              NOBITS           0000000000012098  00002098
       0000000000000028  0000000000000000  WA       0     0     8
  [25] .comment          PROGBITS         0000000000000000  00002098
       0000000000000027  0000000000000001  MS       0     0     1
  [26] .debug_aranges    PROGBITS         0000000000000000  000020bf
       0000000000000030  0000000000000000           0     0     1
  [27] .debug_info       PROGBITS         0000000000000000  000020ef
       0000000000000886  0000000000000000           0     0     1
  [28] .debug_abbrev     PROGBITS         0000000000000000  00002975
       000000000000017c  0000000000000000           0     0     1
  [29] .debug_line       PROGBITS         0000000000000000  00002af1
       00000000000002c7  0000000000000000           0     0     1
  [30] .debug_str        PROGBITS         0000000000000000  00002db8
       000000000000052e  0000000000000001  MS       0     0     1
  [31] .symtab           SYMTAB           0000000000000000  000032e8
       0000000000000b40  0000000000000018          32    76     8
  [32] .strtab           STRTAB           0000000000000000  00003e28
       0000000000000461  0000000000000000           0     0     1
  [33] .shstrtab         STRTAB           0000000000000000  00004289
       0000000000000143  0000000000000000           0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), I (info),
  L (link order), O (extra OS processing required), G (group), T (TLS),
  C (compressed), x (unknown), o (OS specific), E (exclude),
  p (processor specific)

Program Headers:
  Type           Offset             VirtAddr           PhysAddr
                 FileSiz            MemSiz              Flags  Align
  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040
                 0x00000000000001f8 0x00000000000001f8  R      0x8
  INTERP         0x0000000000000238 0x0000000000000238 0x0000000000000238
                 0x000000000000001b 0x000000000000001b  R      0x1
      [Requesting program interpreter: /lib/ld-linux-aarch64.so.1]
  LOAD           0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x00000000000014a4 0x00000000000014a4  R E    0x10000
  LOAD           0x0000000000001da0 0x0000000000011da0 0x0000000000011da0
                 0x00000000000002f8 0x0000000000000320  RW     0x10000
  DYNAMIC        0x0000000000001db0 0x0000000000011db0 0x0000000000011db0
                 0x00000000000001f0 0x00000000000001f0  RW     0x8
  NOTE           0x0000000000000254 0x0000000000000254 0x0000000000000254
                 0x0000000000000044 0x0000000000000044  R      0x4
  GNU_EH_FRAME   0x00000000000012cc 0x00000000000012cc 0x00000000000012cc
                 0x0000000000000064 0x0000000000000064  R      0x4
  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000
                 0x0000000000000000 0x0000000000000000  RW     0x10
  GNU_RELRO      0x0000000000001da0 0x0000000000011da0 0x0000000000011da0
                 0x0000000000000260 0x0000000000000260  R      0x1

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02     .interp .note.gnu.build-id .note.ABI-tag .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt .text .fini .rodata .eh_frame_hdr .eh_frame 
   03     .init_array .fini_array .dynamic .got .got.plt .data .bss 
   04     .dynamic 
   05     .note.gnu.build-id .note.ABI-tag 
   06     .eh_frame_hdr 
   07     
   08     .init_array .fini_array .dynamic .got 
